
spring.datasource.url=jdbc:mysql://localhost:3306/db_sco_mvc?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#show sql when JPA do something in console
spring.jpa.show-sql=true 

#If table not exist JPA create them else update
# En revanche update ne voit que la TABLE en elle même et s'en fou des annotation column length etc
# donc en dev il vaut mieux la passer en create
#spring.jpa.hibernate.ddl-auto=update

# this work but will delete all and create from 0 usefull for test
spring.jpa.hibernate.ddl-auto=create


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#Si on utilise pas la dependence devTool pour avoir a eviter de redemarrer le serveur on fait ca
# spring.thymeleaf.cache=false
# ca marche avec toute les lib qu'on utilise


# multipart  (obligé pour l'upload sinon on aura une erreur)
multipart.maxFileSize: 10000KB
multipart.maxRequestSize: 10000KB


#dossier ou on va send notre fichier photo (peut importe le nom ici)
# il uploadera les fichier en local sur home/images (sinon erreur d'accès)
dirUploadPhoto=${user.home}/pictures/

#C:\Users\Sylvain\Pictures par exemple